{"version":3,"sources":["Components/Form.js","Components/Todo.js","Components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","setTodos","todos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","saveLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb0c30da.chunk.js","sourcesContent":["import React from \"react\";\r\nconst Form = ({ setInputText, setTodos, todos, inputText, setStatus}) =>{\r\n    const inputTextHandler = (e) => { // e is event javaScript code and function, it's handling the state of any input put in the form\r\n        setInputText(e.target.value);\r\n    };\r\n    const submitTodoHandler = (e) => {\r\n       e.preventDefault();\r\n       setTodos([\r\n           ...todos, {text: inputText, completed: false, id: Math.random()*1000}\r\n       ]);\r\n       setInputText(\"\");\r\n    };\r\n    const statusHandler = (e) =>{\r\n        setStatus(e.target.value);\r\n    };\r\n    return(\r\n<form>\r\n      <input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" /> \r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n    );\r\n};\r\nexport default Form;\r\n","import React from \"react\";\r\nconst Todo = ({text, todo, todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n         if(item.id === todo.id){\r\n             return{\r\n                 ...item, completed: !item.completed\r\n             }\r\n         }\r\n         return item;\r\n        }))\r\n    }\r\n    return(\r\n<div className=\"todo\">\r\n    <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n    </li>\r\n    <button onClick={completeHandler} className=\"complete-btn\" >\r\n        <i className=\"fas fa-check\"></i>\r\n        </button>\r\n    <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n        </button>\r\n</div>\r\n    );\r\n};\r\nexport default Todo;","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\nconst TodoList = ({ todos, setTodos, filteredTodos}) => {\r\nreturn(\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n          {filteredTodos.map(todo => (\r\n            <Todo \r\n            setTodos={setTodos} \r\n            todos={todos} \r\n            key={todo.id} \r\n            todo={todo}\r\n            text={todo.text}/>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n);\r\n};\r\nexport default TodoList;","import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Form from \"./Components/Form\";//importing components\nimport TodoList from \"./Components/TodoList\"; //importing components\nfunction App() {\n  //state stuff\n  const [inputText, setInputText] = useState(\"\"); //state for input in the list\n  const [todos, setTodos] = useState([]); //state for storing input of todos,in array of objects\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //run once when starts\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n  //use effect\n  useEffect(() => {\n      //functions\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'uncompleted':\n          setFilteredTodos(todos.filter(todo => todo.completed === false));\n          break;\n      default:\n           setFilteredTodos(todos);\n           break;  \n    }\n  };\n  saveLocalTodos();\n    filterHandler();\n    \n  }, [todos, status]);\n //save to local\n const saveLocalTodos = () => {\n     localStorage.setItem(\"todos\",JSON.stringify(todos));\n };\n const getLocalTodos = () => {\n  if(localStorage.getItem('todos') == null){\n    localStorage.setItem('todos',JSON.stringify([]));\n  }else{\n    let todoLocal = JSON.parse(localStorage.getItem('todos'));\n    setTodos(todoLocal);\n  }\n };\n  \n  return (\n    <div className=\"App\">\n      <header>\n  <h1>ProTask</h1>\n      </header>\n      <Form \n      todos={todos} \n      setTodos={setTodos} \n      setInputText={setInputText} \n      inputText={inputText}\n      setStatus={setStatus}\n      />   \n      <TodoList \n      filteredTodos={filteredTodos}\n      setTodos={setTodos} \n      todos={todos} />  \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}